openapi: 3.0.3
info:
  title: DFRAS API v2.0
  description: |
    Delivery Failure Root Cause Analysis System (DFRAS) API
    
    A comprehensive AI-powered platform for analyzing delivery failures and providing predictive insights for logistics operations.
    
    ## Current Features
    - **Dashboard**: Real-time overview with delivery metrics and KPIs
    - **AI Query Analysis**: Natural language queries powered by LLM (all-MiniLM-L6-v2)
    - **Orders Management**: View and manage delivery orders
    - **Analytics**: Comprehensive data analysis and reporting
    - **Data Ingestion**: CSV file upload and sample data processing
    - **Sample Data**: Browse and analyze sample dataset
    - **Data Visualization**: Advanced charts and visualizations
    - **Admin Management**: User management and system configuration
    
    ## Authentication
    All endpoints require JWT authentication. Use the `/auth/login` endpoint to obtain a token.
    
    ## Sample Data
    The system includes comprehensive sample data from `third-assignment-sample-data-set`:
    - 750+ clients across multiple cities
    - 15,000+ orders with delivery status
    - 50+ warehouses with capacity data
    - 200+ drivers with performance metrics
    - External factors (weather, traffic, events)
    - Customer feedback and ratings
  version: 2.0.0
  contact:
    name: DFRAS Support
    email: support@dfras.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: API Gateway (Main Entry Point)
  - url: http://localhost:8001
    description: Data Service Direct Access
  - url: http://localhost:8002
    description: Analytics Service Direct Access
  - url: http://localhost:8006
    description: Data Ingestion Service Direct Access
  - url: http://localhost:8007
    description: Enhanced Analytics Service Direct Access
  - url: http://localhost:8008
    description: Admin Service Direct Access
  - url: http://localhost:8010
    description: AI Query Service Direct Access

security:
  - bearerAuth: []

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health Check
      description: Check if the API Gateway is healthy
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  service:
                    type: string
                    example: "api-gateway"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: Authenticate user and receive JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "admin123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: "bearer"
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      role:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
        '401':
          description: Invalid credentials

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get Current User
      description: Get information about the currently authenticated user
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  role:
                    type: string
                  permissions:
                    type: array
                    items:
                      type: string
        '401':
          description: Unauthorized

  /api/analytics/dashboard:
    get:
      tags:
        - Analytics
      summary: Get Dashboard Data
      description: Retrieve dashboard metrics and KPIs
      responses:
        '200':
          description: Dashboard data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_orders:
                    type: integer
                  failed_orders:
                    type: integer
                  success_rate:
                    type: number
                  top_failure_reasons:
                    type: array
                    items:
                      type: object
                      properties:
                        reason:
                          type: string
                        count:
                          type: integer

  /api/analytics/failure-analysis:
    get:
      tags:
        - Analytics
      summary: Get Failure Analysis
      description: Retrieve detailed failure analysis data
      responses:
        '200':
          description: Failure analysis data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_data:
                    type: array
                    items:
                      type: object

  /api/analytics/data:
    get:
      tags:
        - Analytics
      summary: Get Analytics Data
      description: Retrieve general analytics data
      responses:
        '200':
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /api/data/orders:
    get:
      tags:
        - Data
      summary: Get Orders
      description: Retrieve delivery orders data
      responses:
        '200':
          description: Orders data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        client_id:
                          type: integer
                        warehouse_id:
                          type: integer
                        driver_id:
                          type: integer
                        status:
                          type: string
                        created_at:
                          type: string
                          format: date-time

  /api/data/sample-data:
    get:
      tags:
        - Data
      summary: Get Sample Data
      description: Retrieve sample dataset information
      responses:
        '200':
          description: Sample data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  tables:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        count:
                          type: integer

  /api/data-ingestion/upload:
    post:
      tags:
        - Data Ingestion
      summary: Upload CSV File
      description: Upload and process CSV file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File uploaded and processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  processed_rows:
                    type: integer

  /api/data-ingestion/sample-data:
    post:
      tags:
        - Data Ingestion
      summary: Ingest Sample Data
      description: Process and ingest sample data into the system
      responses:
        '200':
          description: Sample data ingested successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  ingested_tables:
                    type: array
                    items:
                      type: string

  /api/data-ingestion/status:
    get:
      tags:
        - Data Ingestion
      summary: Get Ingestion Status
      description: Get current data ingestion status
      responses:
        '200':
          description: Ingestion status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  last_ingestion:
                    type: string
                    format: date-time

  /api/data-ingestion/data-quality:
    get:
      tags:
        - Data Ingestion
      summary: Get Data Quality Report
      description: Retrieve data quality analysis report
      responses:
        '200':
          description: Data quality report retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  quality_score:
                    type: number
                  issues:
                    type: array
                    items:
                      type: object

  /api/ai/query:
    post:
      tags:
        - AI Query
      summary: Process AI Query
      description: Process natural language query using AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  example: "What are the main causes of delivery failures?"
                context:
                  type: string
                  example: "delivery_analysis"
      responses:
        '200':
          description: AI query processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                  insights:
                    type: array
                    items:
                      type: string
                  confidence:
                    type: number

  /api/ai/insights:
    get:
      tags:
        - AI Query
      summary: Get AI Insights
      description: Retrieve AI-generated insights
      responses:
        '200':
          description: AI insights retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  insights:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        confidence:
                          type: number

  /api/enhanced-analytics/data:
    get:
      tags:
        - Enhanced Analytics
      summary: Get Enhanced Analytics Data
      description: Retrieve enhanced analytics data
      responses:
        '200':
          description: Enhanced analytics data retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /api/enhanced-analytics/visualizations:
    get:
      tags:
        - Enhanced Analytics
      summary: Get Visualizations
      description: Retrieve data visualization configurations
      responses:
        '200':
          description: Visualizations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  charts:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        data:
                          type: object

  /api/admin/users:
    get:
      tags:
        - Admin
      summary: Get Users
      description: Retrieve all users (Admin only)
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                    full_name:
                      type: string
                    role:
                      type: string
                    is_active:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
        '403':
          description: Admin access required

    post:
      tags:
        - Admin
      summary: Create User
      description: Create a new user (Admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                full_name:
                  type: string
                role:
                  type: string
                  enum: [admin, operations_manager, data_analyst, customer_service]
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
        '403':
          description: Admin access required

  /api/admin/users/{user_id}:
    get:
      tags:
        - Admin
      summary: Get User by ID
      description: Retrieve user by ID (Admin only)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User retrieved successfully
        '403':
          description: Admin access required
        '404':
          description: User not found

    put:
      tags:
        - Admin
      summary: Update User
      description: Update user information (Admin only)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                full_name:
                  type: string
                role:
                  type: string
                is_active:
                  type: boolean
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '403':
          description: Admin access required
        '404':
          description: User not found

    delete:
      tags:
        - Admin
      summary: Delete User
      description: Delete user (Admin only)
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
        '403':
          description: Admin access required
        '404':
          description: User not found

  /api/admin/config:
    get:
      tags:
        - Admin
      summary: Get System Configurations
      description: Retrieve all system configurations (Admin only)
      responses:
        '200':
          description: Configurations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    key:
                      type: string
                    value:
                      type: string
                    description:
                      type: string
                    category:
                      type: string
                    is_encrypted:
                      type: boolean
        '403':
          description: Admin access required

    post:
      tags:
        - Admin
      summary: Create System Configuration
      description: Create new system configuration (Admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - value
              properties:
                key:
                  type: string
                value:
                  type: string
                description:
                  type: string
                category:
                  type: string
                is_encrypted:
                  type: boolean
      responses:
        '201':
          description: Configuration created successfully
        '403':
          description: Admin access required

  /api/admin/config/{config_id}:
    get:
      tags:
        - Admin
      summary: Get Configuration by ID
      description: Retrieve configuration by ID (Admin only)
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Configuration retrieved successfully
        '403':
          description: Admin access required
        '404':
          description: Configuration not found

    put:
      tags:
        - Admin
      summary: Update Configuration
      description: Update system configuration (Admin only)
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
                description:
                  type: string
                category:
                  type: string
                is_encrypted:
                  type: boolean
      responses:
        '200':
          description: Configuration updated successfully
        '403':
          description: Admin access required
        '404':
          description: Configuration not found

    delete:
      tags:
        - Admin
      summary: Delete Configuration
      description: Delete system configuration (Admin only)
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Configuration deleted successfully
        '403':
          description: Admin access required
        '404':
          description: Configuration not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
        error_code:
          type: string
        timestamp:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        full_name:
          type: string
        role:
          type: string
          enum: [admin, operations_manager, data_analyst, customer_service]
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SystemConfig:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        value:
          type: string
        description:
          type: string
        category:
          type: string
        is_encrypted:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Order:
      type: object
      properties:
        id:
          type: integer
        client_id:
          type: integer
        warehouse_id:
          type: integer
        driver_id:
          type: integer
        status:
          type: string
          enum: [pending, in_transit, delivered, failed, cancelled]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

tags:
  - name: Health
    description: Health check endpoints
  - name: Authentication
    description: Authentication and user management
  - name: Analytics
    description: Analytics and reporting endpoints
  - name: Data
    description: Data access and management
  - name: Data Ingestion
    description: Data ingestion and processing
  - name: AI Query
    description: AI-powered query processing
  - name: Enhanced Analytics
    description: Advanced analytics and visualizations
  - name: Admin
    description: Administrative functions (Admin only)